import os
import csv
import numpy as np
import time

# 1. ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
base_folder = r"C:\Users\USER\Desktop\AI_Housing_Project\data\maps\CSV\goodcsv"

# 2. ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (‡πÉ‡∏´‡πâ‡∏õ‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏≤‡∏¢‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î ‡∏Å‡∏î Enter ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏ö)
print(f"üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏õ‡πâ‡∏≠‡∏ô Grid (‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ó‡∏µ‡∏•‡∏∞‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î ‡∏Å‡∏î Enter ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏ö):")
print(f"üîπ ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á:\n  0 | H | 2 | 3\n  4 | 5 | 6 | 7\n  (Enter ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏à‡∏ö)")

grid = []
while True:
    row_input = input().strip()
    if not row_input:  # ‡∏ñ‡πâ‡∏≤‡∏Å‡∏î Enter ‡πÄ‡∏ß‡πâ‡∏ô‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÉ‡∏´‡πâ‡∏´‡∏¢‡∏∏‡∏î
        break
    row_data = [cell.strip() for cell in row_input.replace("|", " ").split()]
    grid.append(row_data)

# 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á Grid
rows = len(grid)
cols = len(grid[0]) if rows > 0 else 0

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ó‡∏∏‡∏Å‡πÅ‡∏ñ‡∏ß‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô
if not all(len(row) == cols for row in grid):
    print("‚ùå Error: ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡πÉ‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÅ‡∏ñ‡∏ß‡πÑ‡∏°‡πà‡πÄ‡∏ó‡πà‡∏≤‡∏Å‡∏±‡∏ô! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà")
    exit()

# 4. ‡πÅ‡∏™‡∏î‡∏á Grid ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
print(f"\n‚úÖ Grid ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏õ‡πâ‡∏≠‡∏ô ({rows}x{cols}):")
def display_grid(g):
    print("\n".join([" | ".join(row) for row in g]))
    print("\n")

display_grid(grid)

# 5. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà‡∏ï‡∏≤‡∏°‡∏Ç‡∏ô‡∏≤‡∏î Grid ‡πÅ‡∏•‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ô
run_id = time.strftime("%Y%m%d_%H%M%S")
folder_path = os.path.join(base_folder, f"run_{rows}x{cols}_{run_id}")
file_prefix = "grid_"
os.makedirs(folder_path, exist_ok=True)

# 6. ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏°‡∏∏‡∏ô‡πÅ‡∏•‡∏∞‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô Grid
def rotate_grid(g, angle):
    """ ‡∏´‡∏°‡∏∏‡∏ô grid ‡∏ï‡∏≤‡∏°‡∏°‡∏∏‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î (0¬∞, 90¬∞, 180¬∞, 270¬∞) """
    array = np.array(g, dtype=object)  # ‡πÉ‡∏ä‡πâ object ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÅ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£
    if angle == 90:
        return np.rot90(array, k=-1).tolist()
    elif angle == 180:
        return np.rot90(array, k=2).tolist()
    elif angle == 270:
        return np.rot90(array, k=1).tolist()
    return g  # ‡∏´‡∏°‡∏∏‡∏ô 0¬∞ ‡∏Ñ‡∏∑‡∏≠‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°

def flip_horizontal(g):
    """ ‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô """
    return [row[::-1] for row in g]

def flip_vertical(g):
    """ ‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á """
    return g[::-1]

# 7. ‡∏´‡∏°‡∏∏‡∏ô Grid ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏õ‡πá‡∏ô‡∏•‡∏¥‡∏™‡∏ï‡πå
grids = {
    "0deg": grid,
    "90deg": rotate_grid(grid, 90),
    "180deg": rotate_grid(grid, 180),
    "270deg": rotate_grid(grid, 270),
}

# 8. ‡∏™‡∏£‡πâ‡∏≤‡∏á Grid ‡∏ó‡∏µ‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏î‡πâ‡∏≤‡∏ô
flipped_horizontal = {key + "_H": flip_horizontal(g) for key, g in grids.items()}
flipped_vertical = {key + "_V": flip_vertical(g) for key, g in grids.items()}

# ‡∏£‡∏ß‡∏° Grid ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
all_grids = {**grids, **flipped_horizontal, **flipped_vertical}

# 9. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏•‡∏∞‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞ Grid ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ã‡πâ‡∏≥
saved_grids = set()
saved_count = 0

for name, g in all_grids.items():
    grid_tuple = tuple(map(tuple, g))  # ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô Tuple ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ã‡πâ‡∏≥

    if grid_tuple not in saved_grids:
        saved_grids.add(grid_tuple)
        file_path = os.path.join(folder_path, f"{file_prefix}{name}.csv")
        with open(file_path, mode="w", newline="") as f:
            writer = csv.writer(f)
            writer.writerows(g)
        print(f"‚úÖ Saved: {file_path}")
        saved_count += 1
    else:
        print(f"‚ö†Ô∏è Skipped duplicate: {name}")

print(f"\nüéâ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î {saved_count} ‡πÑ‡∏ü‡∏•‡πå ‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÉ‡∏´‡∏°‡πà: {folder_path}")
